<?php

require_once 'src/SimpleMinimalSdk.php';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç Minimal Decimal PHP SDK
 * –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */

echo "üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Minimal Decimal PHP SDK\n";
echo str_repeat("=", 50) . "\n";

$testResults = [];
$testCount = 0;
$passedCount = 0;

function runTest($name, $testFunction) {
    global $testResults, $testCount, $passedCount;
    
    $testCount++;
    echo "–¢–µ—Å—Ç {$testCount}: {$name}... ";
    
    try {
        $result = $testFunction();
        if ($result) {
            echo "‚úÖ –ü–†–û–ô–î–ï–ù\n";
            $passedCount++;
            $testResults[] = "‚úÖ {$name}";
        } else {
            echo "‚ùå –ü–†–û–í–ê–õ–ï–ù\n";
            $testResults[] = "‚ùå {$name}";
        }
    } catch (Exception $e) {
        echo "‚ùå –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
        $testResults[] = "‚ùå {$name} - " . $e->getMessage();
    }
}

// –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞
runTest("–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞", function() {
    $validAddress = "0x40900a48273644768c09183e00e43528c17a29f6";
    $invalidAddress = "invalid_address";
    
    return SimpleMinimalSdk::isValidAddress($validAddress) && !SimpleMinimalSdk::isValidAddress($invalidAddress);
});

// –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
runTest("–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞", function() {
    $validKey = "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef";
    $invalidKey = "invalid_key";
    
    return SimpleMinimalSdk::isValidPrivateKey($validKey) && !SimpleMinimalSdk::isValidPrivateKey($invalidKey);
});

// –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∏–¥ —Ñ—Ä–∞–∑—ã
runTest("–í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∏–¥ —Ñ—Ä–∞–∑—ã", function() {
    $validSeed = "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about";
    $invalidSeed = "invalid seed phrase";
    
    return SimpleMinimalSdk::isValidSeedPhrase($validSeed) && !SimpleMinimalSdk::isValidSeedPhrase($invalidSeed);
});

// –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
runTest("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞", function() {
    $wallet = SimpleMinimalSdk::createNewWallet(24);
    
    return is_array($wallet) && 
           isset($wallet['address']) && 
           isset($wallet['seed_phrase']) && 
           isset($wallet['private_key']) &&
           SimpleMinimalSdk::isValidAddress($wallet['address']) &&
           SimpleMinimalSdk::isValidSeedPhrase($wallet['seed_phrase']) &&
           SimpleMinimalSdk::isValidPrivateKey($wallet['private_key']);
});

// –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ —Å–∏–¥ —Ñ—Ä–∞–∑—ã
runTest("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ —Å–∏–¥ —Ñ—Ä–∞–∑—ã", function() {
    $seedPhrase = "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about";
    $privateKey = SimpleMinimalSdk::getPrivateKeyFromSeed($seedPhrase);
    
    return is_string($privateKey) && strlen($privateKey) === 64 && SimpleMinimalSdk::isValidPrivateKey($privateKey);
});

// –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
runTest("–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞", function() {
    $privateKey = SimpleMinimalSdk::generatePrivateKey();
    $address = SimpleMinimalSdk::getAddressFromPrivateKey($privateKey);
    
    return is_string($address) && SimpleMinimalSdk::isValidAddress($address) && str_starts_with($address, '0x');
});

// –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ DEL
runTest("–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ DEL", function() {
    $balance = SimpleMinimalSdk::getDelBalance("0x40900a48273644768c09183e00e43528c17a29f6");
    return is_float($balance) && $balance >= 0;
});

// –¢–µ—Å—Ç 8: –û—Ç–ø—Ä–∞–≤–∫–∞ DEL
runTest("–û—Ç–ø—Ä–∞–≤–∫–∞ DEL", function() {
    $result = SimpleMinimalSdk::sendDel(
        "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",
        "0x40900a48273644768c09183e00e43528c17a29f6",
        0.001,
        "–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑ minimal_php_sdk created @Maxwell2019"
    );
    
    return is_array($result) && isset($result['success']) && $result['success'] === true;
});

// –¢–µ—Å—Ç 9: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞
runTest("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞", function() {
    $result = SimpleMinimalSdk::sendTokenBySymbol(
        "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",
        "fridaycoin",
        "0x40900a48273644768c09183e00e43528c17a29f6",
        100
    );
    
    return is_array($result) && isset($result['success']) && $result['success'] === true;
});

// –¢–µ—Å—Ç 10: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–∑–∞
runTest("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–∑–∞", function() {
    $result = SimpleMinimalSdk::sendPrizeToWinner(
        "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",
        "0x40900a48273644768c09183e00e43528c17a29f6",
        "DEL",
        1.0
    );
    
    return is_array($result) && isset($result['success']) && $result['success'] === true;
});

echo "\n" . str_repeat("=", 50) . "\n";
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:\n";
echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {$testCount}\n";
echo "–ü—Ä–æ–π–¥–µ–Ω–æ: {$passedCount}\n";
echo "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: " . ($testCount - $passedCount) . "\n";
echo "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: " . round(($passedCount / $testCount) * 100, 2) . "%\n\n";

echo "üìã –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:\n";
foreach ($testResults as $result) {
    echo "   {$result}\n";
}

if ($passedCount === $testCount) {
    echo "\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!\n";
} else {
    echo "\n‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´.\n";
}

echo "\n" . str_repeat("=", 50) . "\n";
echo "üîß –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:\n\n";

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:\n";
$newWallet = SimpleMinimalSdk::createNewWallet(24);
echo "   –ê–¥—Ä–µ—Å: {$newWallet['address']}\n";
echo "   –°–∏–¥ —Ñ—Ä–∞–∑–∞: {$newWallet['seed_phrase']}\n";
echo "   –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: {$newWallet['private_key']}\n\n";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
echo "üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ DEL:\n";
$balance = SimpleMinimalSdk::getDelBalance("0x40900a48273644768c09183e00e43528c17a29f6");
echo "   –ë–∞–ª–∞–Ω—Å DEL: {$balance}\n\n";

// –û—Ç–ø—Ä–∞–≤–∫–∞ DEL
echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ DEL:\n";
$delResult = SimpleMinimalSdk::sendDel(
    "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",
    "0x40900a48273644768c09183e00e43528c17a29f6",
    5.0,
    "–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑ minimal_php_sdk created @Maxwell2019"
);

if ($delResult['success']) {
    echo "   ‚úÖ DEL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n";
    echo "   üìã –•–µ—à: {$delResult['tx_hash']}\n";
    echo "   üî¢ –ë–ª–æ–∫: {$delResult['block_number']}\n";
    echo "   ‚õΩ –ì–∞–∑: {$delResult['gas_used']}\n";
    echo "   üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {$delResult['balance_after']} DEL\n";
    echo "   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {$delResult['message']}\n";
} else {
    echo "   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ DEL: {$delResult['error']}\n";
}

echo "\nü™ô –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞:\n";
$tokenResult = SimpleMinimalSdk::sendTokenBySymbol(
    "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about",
    "fridaycoin",
    "0x40900a48273644768c09183e00e43528c17a29f6",
    11
);

if ($tokenResult['success']) {
    echo "   ‚úÖ –¢–æ–∫–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n";
    echo "   üìã –•–µ—à: {$tokenResult['tx_hash']}\n";
    echo "   üî¢ –ë–ª–æ–∫: {$tokenResult['block_number']}\n";
    echo "   ‚õΩ –ì–∞–∑: {$tokenResult['gas_used']}\n";
    echo "   ü™ô –ë–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–∞ –ø–æ—Å–ª–µ: {$tokenResult['token_balance_after']}\n";
    echo "   üìù –¢–æ–∫–µ–Ω: {$tokenResult['token_info']['symbol']}\n";
} else {
    echo "   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞: {$tokenResult['error']}\n";
}

echo "\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n";
echo "üí° –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è SDK –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏. –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ Composer.\n";
